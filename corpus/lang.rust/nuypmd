Is it an antipattern that the public class from the library has lifetime annotation with it?
I am working on some library and it exposes some struct to the users that has lifetime annotations with it. In other words, it is defined in sth like

    struct SomePublicStruct<'a> {
  some_data: &'a SomeData
    }

so the users of SomePublicStruct may have to carry <'a> to use it.

But from my (short) experience from Rust, I have not seen a case where the library I had to use requires a lifetime annotation for it.

Is it an anti-pattern that the public class from the library has lifetime annotation with it?