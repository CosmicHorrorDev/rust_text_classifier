Universal-ish schema analysis powered by Serde
Analyse the structure of any self-describing data format with one line of code:

    let inferred: InferredSchema = serde_json::from_slice(data)?;

How does this work? By calling [deserialize\_any](https://docs.serde.rs/serde/trait.Deserializer.html#tymethod.deserialize_any) on the Deserializer then having the Visitor return an enum variant corresponding to the type of value found. A more in-depth run through is in the [analysis module docs](https://docs.rs/schema_analysis/latest/schema_analysis/analysis/) of the crate, but be warned of excessive anthropomorphization.

Since this is something that is handy to have around for a quick run, I also put it on a [website](https://schema-analysis.com/).

Thanks to Serde for the amazing platform and all the hard work from the community to implement the formats! And thanks [Schemars](https://docs.rs/schemars/latest/schemars/) and [json\_typegen](https://docs.rs/json_typegen/latest/json_typegen/) which make the website more useful.

\[[crate](https://crates.io/crates/schema_analysis)\]\[[docs](https://docs.rs/schema_analysis/latest/schema_analysis/)\]\[[repo](https://github.com/QuartzLibrary/schema_analysis)\]

P.S.: As this is my first contribution, constructive criticism is welcome!