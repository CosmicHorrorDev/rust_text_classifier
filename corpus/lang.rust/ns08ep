How to manually implement the fatest json deserilizer
Say I have such data. It's feeded from a websocket and the format does not change. I'm only interested in extracing fields in `Data` as quickly as possible. No need to consider string escape, etc.

The json parser implementation only deals with this specific kind of data. In comparision, serde_json does some extra work to obey JSON spec, but that is unnecessary. Also, to deal with `"547"`, one have to do allocate a `String` with serde_json.

Ideally, a manually implemented json parser for this message is the fatest. How would you write it?
```rust
const JSON: &str = r#"{"data":{"orderId":"5fe6cac968d39200069835d2","orderTime":1608960713580542821,"price":"0.3153","sequence":1603334938247,"side":"sell","size":"547","symbol":"XRPUSDTM","ts":1608960713617535868},"subject":"open","topic":"/contractMarket/level3v2:XRPUSDTM","type":"message"}"#;
struct Data {
    order_id: String,
    order_time: u64,
    price: f64,
    sequence: u64,
    topic: String,
}
```