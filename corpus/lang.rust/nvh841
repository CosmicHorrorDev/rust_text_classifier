enjoy - my first crate and Rust project (binary, Linux only)
- https://github.com/thingsiplay/enjoy
- https://crates.io/crates/enjoy/

Hi, I am learning Rust for a few weeks now (more than a month) and created my first project. The basic idea of the binary program is simple, it is a launcher to RetroArch at its heart. RetroArch is suite of game console emulators and stuff and this program makes it a bit easier to run games. But it got a bit more complex than I thought with a configuration file as its base. 

From code organization point of view, the project started with top level files "main.rs" and "lib.rs". But "lib.rs" had a few modules and a big struct. So I started to divide it up into "settings.rs" and a folder "settings". Inside the folder are other modules used by "settings.rs".

What do you think? Did i misunderstood the core concept of code organization? The program does work as expected, but I wonder if the organization is alien to any other Rust programmer. The code itself is formatted with `cargo fmt` and checked with `cargo clippy -- -W clippy::pedantic`. I just ignored a single warning on that one single struct.