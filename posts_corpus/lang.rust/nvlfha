Is there a way to simulate refinement types somehow?
Hi! I'm writing a parser to learn a bit more about compilers, and was wondering if there was a way to simulate the following pattern to make parsing more ergonomic. The lexer returns a peekable iterator over tokens, where the tokens are implemented as an enum. In many cases, I'm only interested in continuing to parse if the next token is a subset of the enum types, and so I'd like to write some generic method that would effectively say "assert that the next token is of variant Token::Foo, and otherwise return an error". Checking the variant type looks to me to require refinement types that to my knowledge aren't supported, but I was wondering if anyone had workarounds to support a similar pattern? Thanks!