{
    "id": "ns2d9n",
    "title": "Requests sent to warp hang using run_incoming",
    "selftext": "Hello all,\n\nIssue: warp seems to hang when using the run_incoming feature.\n\nContext: I'm using a proprietary TCP library, living in sync code. It is responsible for listening on a TCP socket. It has its own request handlers and it also provides with a generic handler yielding TcpStream whenever it detects an unrecognised request. I'm using this handler to send the socket onto a tokio channel, which is passed back to the warp/hyper stack. The ultimate goal is to conflate both protocols on the same TCP port. Ditching the proprietary proto is a no go.\n\nObservations: The code below is a minimal reproducer of what I'm trying to achieve. When sending a request with curl, I see that the underlying hyper does correctly decode the http request, pass it down to warp which correctly builds a route out of it. But the filters never seem to be called (or at least my only callback never does). \n\n```\nuse std::net::TcpListener;\n\nuse futures::{StreamExt, TryStream};\nuse tokio::net::TcpStream;\nuse warp::Filter;\n\nfn main() {\n    env_logger::init();\n\n    let (tx, rx) = tokio::sync::mpsc::unbounded_channel();\n    std::thread::spawn(move || {\n        let rx = tokio_stream::wrappers::UnboundedReceiverStream::new(rx)\n            .map(|sock| tokio::net::TcpStream::from_std(sock));\n        http(rx);\n    });\n\n    let listener = TcpListener::bind((\"0.0.0.0\", 8000)).unwrap();\n    for sock in listener.incoming() {\n        let sock = sock.unwrap();\n        let _ = tx.send(sock);\n    }\n}\n\nfn http<I>(incoming: I)\nwhere\n    I: Send + TryStream<Ok = TcpStream, Error = std::io::Error>,\n{\n    tokio::runtime::Builder::new_current_thread()\n        .enable_all()\n        .build()\n        .unwrap()\n        .block_on(async {\n            warp::serve(warp::any().map(|| String::from(\"ok\")))\n                .run_incoming(incoming)\n                .await\n        })\n}\n```\n\nDid anyone run into this kind of problem and can help me understand what's going wrong?\n\nCheers !"
}