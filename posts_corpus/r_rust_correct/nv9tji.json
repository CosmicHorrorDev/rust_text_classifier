{
    "id": "nv9tji",
    "title": "Darkroom: A VCR contract testing tool built in Rust",
    "selftext": "Over the last year and a half I've been developing an integration testing tool called [Darkroom](https://github.com/mkatychev/darkroom) accompanied by the DSL spec [filmReel](https://github.com/mkatychev/filmreel)\n\nUntil the `argh` crate [bumps their version](https://github.com/google/argh/issues/89) I cannot updater the version on crates.io so the install command currently is:\n`\ncargo install --git https://github.com/mkatychev/darkroom\n`\n\n\nThe [examples](https://github.com/mkatychev/darkroom#examples) in the README should make it somewhat clear in how it works, these use the Stripe test API and httpbin.\n\n`dark man [command]` features documentation built into the CLI tool.\n\nHere are some nice features I\u2019ve added over the development cycle:\n- HTTP support\n- gRPC support (assuming `grpcurl` is installed)\n- [retry attempts](https://github.com/mkatychev/filmreel/blob/master/extra_concepts/retry_attempts.md)\n- [secrets handling](https://github.com/Bestowinc/filmReel/blob/master/extra_concepts/hidden_variables.md) (still has edge case issues on response diff)\n- [partial comparison](https://github.com/mkatychev/filmreel/blob/master/extra_concepts/validation.md)\n- unordered comparisons\n- arbitrary reordering of the test flow called[ \"virtual reels\"](https://github.com/mkatychev/darkroom/blob/master/test_data/post.vr.json)\n\n\nrepo that demonstrates how partial and unordered comparison works [here](https://github.com/mkatychev/darkroom_httpbin) (needs go installed)\nchangelog [here](https://github.com/mkatychev/darkroom/blob/master/CHANGELOG.md)"
}