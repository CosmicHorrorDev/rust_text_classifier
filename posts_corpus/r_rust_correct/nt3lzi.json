{
    "id": "nt3lzi",
    "title": "The last step in getting an Actix Juniper GraphQL Diesel powered Cloud Postgres Database system to work. What is the proper dockerfile for the actix web server?",
    "selftext": "There are so many different options from Google searches and none seem to work. I am getting this error deploying the container -*Cloud   Run   error:   Container   failed   to   start.   Failed   to   start   and   then   listen   on   the   port   defined   by   the   PORT   environment   variable.*\n\nDockerfile - jupiter is the name of the project.`FROM rust:latestENV APP_HOME /appENV PATH=\"/root/.cargo/bin:${PATH}\"# install tools needed for rustRUN apt-get update && apt-get install -y curl \\&& apt-get install -y build-essential# install rustRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y# Copy local code to the container image.WORKDIR $APP_HOMECOPY . ./# project dependecies and buildRUN cargo build --release# move packaged buildCOPY --from=builder /target/x86_64-unknown-linux-gnu/release/jupiter .# run serverCMD [\"/jupiter\"]`\n\nActix version 1 http server starting. Works on local. Port is 8080 and IP is set to [0.0.0.0](https://0.0.0.0)\n\nFor python gunicron, its `CMD exec gunicorn --bind :$PORT --workers 4 --threads 8 app:app`  \nwhere the IP and port is defined from the container as a $PORT but since the Actix IP & Port is from the code, its having problems?\n\nIn main.rs`fn main() -> io::Result<()> {dotenv().ok();let pool = establish_connection();let schema_context = Context { db: pool.clone() };let schema = std::sync::Arc::new(create_schema());HttpServer::new(move || {App::new().data(schema.clone()).data(schema_context.clone()).service(web::resource(\"/graphql\").route(web::post().to_async(graphql))).service(web::resource(\"/graphiql\").route(web::get().to(graphiql)))}).bind(\"0.0.0.0:8080\")?.run()`\n\nPerhaps this is more a docker question than a rust question. But all rust developers are super smart and helpful."
}